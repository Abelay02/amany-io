{
    "posts": [
      {
        "id": 1,
        "title": "Getting Started with Vue.js",
        "content": "Vue.js is a progressive JavaScript framework for building user interfaces...",
        "slug": "getting-started-with-vuejs"
      },
      {
        "id": 2,
        "title": "The Basics of JavaScript Promises",
        "content": "Promises are a fundamental part of modern JavaScript programming...",
        "slug": "the-basics-of-javascript-promises"
      },
      {
        "id": 3,
        "title": "Introduction to CSS Flexbox",
        "content": "Flexbox is a layout model in CSS that allows you to design complex layouts with ease...",
        "slug": "introduction-to-css-flexbox"
      },
      {
        "id": 4,
        "title": "Working with REST APIs in Node.js",
        "content": "Node.js is a popular runtime for building server-side applications, and working with REST APIs is a common task...",
        "slug": "working-with-rest-apis-in-nodejs"
      },
      {
        "id": 5,
        "title": "Responsive Web Design Principles",
        "content": "Responsive web design ensures that your web pages look and function well on all devices...",
        "slug": "responsive-web-design-principles"
      },
      {
        "id": 6,
        "title": "Vue Router and Single-Page Applications",
        "content": "Vue Router is a powerful routing library for creating single-page applications with Vue.js...",
        "slug": "vue-router-and-single-page-applications"
      },
      {
        "id": 7,
        "title": "Understanding State Management in Vuex",
        "content": "Vuex is a state management library for Vue.js that helps manage the application's state in a predictable way...",
        "slug": "understanding-state-management-in-vuex"
      },
      {
        "id": 8,
        "title": "Building RESTful APIs with Express.js",
        "content": "Express.js is a popular Node.js framework for building web applications, including RESTful APIs...",
        "slug": "building-restful-apis-with-expressjs"
      },
      {
        "id": 9,
        "title": "CSS Grid Layout for Modern Web Design",
        "content": "CSS Grid Layout is a powerful tool for creating two-dimensional grid-based layouts in CSS...",
        "slug": "css-grid-layout-for-modern-web-design"
      },
      {
        "id": 10,
        "title": "Introduction to ES6 and JavaScript Modules",
        "content": "ES6 (ECMAScript 2015) introduced many new features to JavaScript, including modules for organizing code...",
        "slug": "introduction-to-es6-and-javascript-modules"
      },
      {
        "id": 11,
        "title": "Frontend Development Tools for Productivity",
        "content": "Frontend developers use a variety of tools and libraries to improve productivity and streamline development...",
        "slug": "frontend-development-tools-for-productivity"
      },
      {
        "id": 12,
        "title": "Building a Simple Blog with Vue.js and Node.js",
        "content": "In this tutorial, we'll create a simple blog application using Vue.js for the frontend and Node.js for the backend...",
        "slug": "building-a-simple-blog-with-vuejs-and-nodejs"
      },
      {
        "id": 13,
        "title": "Building a Simple Blog with Vue.js and Node.js 2",
        "content": "In this tutorial, we'll create a simple blog application using Vue.js for the frontend and Node.js for the backend...",
        "slug": "building-a-simple-blog-with-vuejs-and-nodejs-2"
      },
      {
        "id": 14,
        "title": "Adding Markdown Support to Your Vue.js Blog",
        "content": "### Introduction\n\nIn this blog post, we will go through the process of adding markdown support to your Vue.js blog. By the end of this tutorial, you will be able to write your blog posts using markdown and have them rendered correctly in your Vue.js application.\n\n### Step 1: Install Markdown Library\n\nWe will use the `markdown-it` library, which is a lightweight and easy-to-use library for rendering markdown. First, install `markdown-it` using npm:\n\n```sh\nnpm install markdown-it\n```\n\n### Step 2: Update BlogPost Component\n\nNext, update your `BlogPost` component to use `markdown-it` for rendering the markdown content. Here’s the updated code:\n\n```vue\n<template>\n  <div class=\"blog-post\">\n    <router-link to=\"/blog\" class=\"back-button\">←Back</router-link>\n    <h2>{{ post.title }}</h2>\n    <div v-html=\"formattedContent\"></div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport MarkdownIt from \"markdown-it\";\n\nexport default {\n  name: \"BlogPost\",\n  data() {\n    return {\n      post: {}, // Initialize with an empty object\n    };\n  },\n\n  async created() {\n    const slug = this.$route.params.slug;\n    try {\n      const resp = await axios.get(\n        `https://my-json-server.typicode.com/Abelay02/amany-io/posts?slug=${slug}`\n      );\n      this.post = resp.data[0];\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  computed: {\n    formattedContent() {\n      const md = new MarkdownIt();\n      return md.render(this.post.content || '');\n    }\n  }\n};\n</script>\n\n<style scoped>\n.blog-post {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  padding: 100px;\n}\n\n/* Back button styles */\n.back-button {\n  text-decoration: none;\n  color: #000; /* Set text color to black */\n  display: flex;\n  align-items: center; /* Vertically center text and arrow */\n  margin-left: -300px; /* Offset to align with left edge of cards */\n}\n</style>\n```\n\n### Step 3: Uninstall Marked (Optional)\n\nIf you previously installed the `marked` library and want to remove it to clean up your dependencies, you can uninstall it using npm:\n\n```sh\nnpm uninstall marked\n```\n\n### Step 4: Linting and Fixing Errors\n\nIf you encounter any linting errors, you can use the following command to automatically fix them:\n\n```sh\nnpx eslint --fix src/components/BlogPost.vue\n```\n\nAlternatively, you can lint the entire project:\n\n```sh\nnpx eslint --fix src\n```\n\n### Conclusion\n\nBy following these steps, you have successfully added markdown support to your Vue.js blog. Now you can write your blog posts using markdown and have them rendered correctly in your application.",
        "slug": "adding-markdown-support-to-your-vuejs-blog"
      }
    ]
  }
  